diff -Naur ld64/ld64.xcodeproj/project.pbxproj ld64_patched/ld64.xcodeproj/project.pbxproj
--- ld64/ld64.xcodeproj/project.pbxproj	2020-07-30 07:14:22.000000000 +0800
+++ ld64_patched/ld64.xcodeproj/project.pbxproj	2021-05-06 12:09:05.000000000 +0800
@@ -1122,9 +1122,7 @@
 					"$(DT_TOOLCHAIN_DIR)/usr/local/include",
 				);
 				INSTALL_PATH = "$(DT_VARIANT)/$(TOOLCHAIN_INSTALL_DIR)/usr/local/bin";
-				ONLY_ACTIVE_ARCH = NO;
 				PRODUCT_NAME = objcimageinfo;
-				SDKROOT = macosx.internal;
 				WARNING_CFLAGS = (
 					"-Wmost",
 					"-Wno-four-char-constants",
@@ -1152,7 +1150,6 @@
 				);
 				INSTALL_PATH = "$(DT_VARIANT)/$(TOOLCHAIN_INSTALL_DIR)/usr/local/bin";
 				PRODUCT_NAME = objcimageinfo;
-				SDKROOT = macosx.internal;
 				WARNING_CFLAGS = (
 					"-Wmost",
 					"-Wno-four-char-constants",
@@ -1180,7 +1177,6 @@
 				);
 				INSTALL_PATH = "$(DT_VARIANT)/$(TOOLCHAIN_INSTALL_DIR)/usr/local/bin";
 				PRODUCT_NAME = objcimageinfo;
-				SDKROOT = macosx.internal;
 				WARNING_CFLAGS = (
 					"-Wmost",
 					"-Wno-four-char-constants",
@@ -1234,11 +1230,11 @@
 				HEADER_SEARCH_PATHS = (
 					"$(DT_TOOLCHAIN_DIR)/usr/local/include",
 					"$(TOOLCHAIN_DIR)/usr/local/include",
+					"$(inherited)",
 				);
 				INSTALL_PATH = "$(DT_VARIANT)/$(TOOLCHAIN_INSTALL_DIR)/usr/bin";
-				LD_RUNPATH_SEARCH_PATHS = "@executable_path/../lib/";
+				LD_RUNPATH_SEARCH_PATHS = "@executable_path/../lib/ @executable_path /var/db/xcode_select_link/Toolchains/XcodeDefault.xctoolchain/usr/lib /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib /usr/local/lib";
 				LINKER_DISPLAYS_MANGLED_NAMES = NO;
-				ONLY_ACTIVE_ARCH = NO;
 				OTHER_CPLUSPLUSFLAGS = (
 					"-stdlib=libc++",
 					"$(OTHER_CPLUSPLUSFLAGS)",
@@ -1253,7 +1249,7 @@
 					"-Wl,-stack_size,0x10000000",
 				);
 				PRODUCT_NAME = ld;
-				SDKROOT = macosx.internal;
+				RC_ProjectSourceVersion = 609;
 				SECTORDER_FLAGS = "";
 				TOOLCHAINS = osx;
 				VERSIONING_SYSTEM = "apple-generic";
@@ -1313,9 +1309,10 @@
 				HEADER_SEARCH_PATHS = (
 					"$(DT_TOOLCHAIN_DIR)/usr/local/include",
 					"$(TOOLCHAIN_DIR)/usr/local/include",
+					"$(inherited)",
 				);
 				INSTALL_PATH = "$(DT_VARIANT)/$(TOOLCHAIN_INSTALL_DIR)/usr/bin";
-				LD_RUNPATH_SEARCH_PATHS = "@executable_path/../lib/";
+				LD_RUNPATH_SEARCH_PATHS = "@executable_path/../lib/ @executable_path /var/db/xcode_select_link/Toolchains/XcodeDefault.xctoolchain/usr/lib /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib /usr/local/lib";
 				OTHER_CPLUSPLUSFLAGS = (
 					"-stdlib=libc++",
 					"$(OTHER_CPLUSPLUSFLAGS)",
@@ -1330,7 +1327,7 @@
 					"-Wl,-stack_size,0x01000000",
 				);
 				PRODUCT_NAME = ld;
-				SDKROOT = macosx.internal;
+				RC_ProjectSourceVersion = 609;
 				SECTORDER_FLAGS = "";
 				STRIP_INSTALLED_PRODUCT = YES;
 				STRIP_STYLE = debugging;
@@ -1368,9 +1365,9 @@
 					"$(DT_TOOLCHAIN_DIR)/usr/local/include",
 					"$(TOOLCHAIN_DIR)/usr/local/include",
 					"$(SRCROOT)/src/ld",
+					"$(inherited)",
 				);
 				INSTALL_PATH = "$(DT_VARIANT)/$(TOOLCHAIN_INSTALL_DIR)/usr/local/bin";
-				ONLY_ACTIVE_ARCH = NO;
 				OTHER_CPLUSPLUSFLAGS = (
 					"-stdlib=libc++",
 					"$(OTHER_CFLAGS)",
@@ -1378,7 +1375,6 @@
 				OTHER_LDFLAGS = "-stdlib=libc++";
 				OTHER_REZFLAGS = "";
 				PRODUCT_NAME = ObjectDump;
-				SDKROOT = macosx.internal;
 				SECTORDER_FLAGS = "";
 				WARNING_CFLAGS = (
 					"-Wmost",
@@ -1405,6 +1401,7 @@
 					"$(DT_TOOLCHAIN_DIR)/usr/local/include",
 					"$(TOOLCHAIN_DIR)/usr/local/include",
 					"$(SRCROOT)/src/ld",
+					"$(inherited)",
 				);
 				INSTALL_PATH = "$(DT_VARIANT)/$(TOOLCHAIN_INSTALL_DIR)/usr/local/bin";
 				OTHER_CPLUSPLUSFLAGS = (
@@ -1414,7 +1411,6 @@
 				OTHER_LDFLAGS = "-stdlib=libc++";
 				OTHER_REZFLAGS = "";
 				PRODUCT_NAME = ObjectDump;
-				SDKROOT = macosx.internal;
 				WARNING_CFLAGS = (
 					"-Wmost",
 					"-Wno-four-char-constants",
@@ -1460,9 +1456,15 @@
 				GCC_WARN_UNINITIALIZED_AUTOS = YES;
 				GCC_WARN_UNUSED_FUNCTION = YES;
 				GCC_WARN_UNUSED_VARIABLE = YES;
-				MACOSX_DEPLOYMENT_TARGET = 10.14;
+				HEADER_SEARCH_PATHS = (
+					"$(SRCROOT)/../tapi/include",
+					"$(SRCROOT)/../dyld/include",
+					"$(SRCROOT)/../llvm.src/include",
+					"$(SRCROOT)/../corecrypto/include",
+				);
+				MACOSX_DEPLOYMENT_TARGET = 10.15;
 				ONLY_ACTIVE_ARCH = YES;
-				SDKROOT = macosx.internal;
+				SDKROOT = macosx;
 			};
 			name = Debug;
 		};
@@ -1502,8 +1504,14 @@
 				GCC_WARN_UNINITIALIZED_AUTOS = YES;
 				GCC_WARN_UNUSED_FUNCTION = YES;
 				GCC_WARN_UNUSED_VARIABLE = YES;
-				MACOSX_DEPLOYMENT_TARGET = 10.14;
-				SDKROOT = macosx.internal;
+				HEADER_SEARCH_PATHS = (
+					"$(SRCROOT)/../tapi/include",
+					"$(SRCROOT)/../dyld/include",
+					"$(SRCROOT)/../llvm.src/include",
+					"$(SRCROOT)/../corecrypto/include",
+				);
+				MACOSX_DEPLOYMENT_TARGET = 10.15;
+				SDKROOT = macosx;
 			};
 			name = Release;
 		};
@@ -1563,8 +1571,14 @@
 				GCC_WARN_UNINITIALIZED_AUTOS = YES;
 				GCC_WARN_UNUSED_FUNCTION = YES;
 				GCC_WARN_UNUSED_VARIABLE = YES;
-				MACOSX_DEPLOYMENT_TARGET = 10.14;
-				SDKROOT = macosx.internal;
+				HEADER_SEARCH_PATHS = (
+					"$(SRCROOT)/../tapi/include",
+					"$(SRCROOT)/../dyld/include",
+					"$(SRCROOT)/../llvm.src/include",
+					"$(SRCROOT)/../corecrypto/include",
+				);
+				MACOSX_DEPLOYMENT_TARGET = 10.15;
+				SDKROOT = macosx;
 			};
 			name = "Release-assert";
 		};
@@ -1627,9 +1641,10 @@
 				HEADER_SEARCH_PATHS = (
 					"$(DT_TOOLCHAIN_DIR)/usr/local/include",
 					"$(TOOLCHAIN_DIR)/usr/local/include",
+					"$(inherited)",
 				);
 				INSTALL_PATH = "$(DT_VARIANT)/$(TOOLCHAIN_INSTALL_DIR)/usr/bin";
-				LD_RUNPATH_SEARCH_PATHS = "@executable_path/../lib/";
+				LD_RUNPATH_SEARCH_PATHS = "@executable_path/../lib/ @executable_path /var/db/xcode_select_link/Toolchains/XcodeDefault.xctoolchain/usr/lib /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib /usr/local/lib";
 				OTHER_CPLUSPLUSFLAGS = (
 					"-stdlib=libc++",
 					"$(OTHER_CPLUSPLUSFLAGS)",
@@ -1644,7 +1659,7 @@
 					"-Wl,-stack_size,0x01000000",
 				);
 				PRODUCT_NAME = ld;
-				SDKROOT = macosx.internal;
+				RC_ProjectSourceVersion = 609;
 				SECTORDER_FLAGS = "";
 				STRIP_INSTALLED_PRODUCT = YES;
 				STRIP_STYLE = debugging;
@@ -1680,7 +1695,6 @@
 					"-Wl,-exported_symbol,__mh_execute_header",
 				);
 				PRODUCT_NAME = unwinddump;
-				SDKROOT = macosx.internal;
 				STRIP_INSTALLED_PRODUCT = YES;
 				STRIP_STYLE = debugging;
 			};
@@ -1704,6 +1718,7 @@
 					"$(DT_TOOLCHAIN_DIR)/usr/local/include",
 					"$(TOOLCHAIN_DIR)/usr/local/include",
 					"$(SRCROOT)/src/ld",
+					"$(inherited)",
 				);
 				INSTALL_PATH = "$(DT_VARIANT)/$(TOOLCHAIN_INSTALL_DIR)/usr/local/bin";
 				OTHER_CPLUSPLUSFLAGS = (
@@ -1713,7 +1728,6 @@
 				OTHER_LDFLAGS = "-stdlib=libc++";
 				OTHER_REZFLAGS = "";
 				PRODUCT_NAME = ObjectDump;
-				SDKROOT = macosx.internal;
 				WARNING_CFLAGS = (
 					"-Wmost",
 					"-Wno-four-char-constants",
@@ -1740,7 +1754,6 @@
 				);
 				OTHER_LDFLAGS = "-stdlib=libc++";
 				PRODUCT_NAME = machocheck;
-				SDKROOT = macosx.internal;
 			};
 			name = "Release-assert";
 		};
@@ -1762,7 +1775,6 @@
 				);
 				OTHER_LDFLAGS = "-stdlib=libc++";
 				PRODUCT_NAME = dyldinfo;
-				SDKROOT = macosx.internal;
 				STRIP_INSTALLED_PRODUCT = YES;
 				STRIP_STYLE = debugging;
 				ZERO_LINK = NO;
@@ -1881,7 +1893,6 @@
 				);
 				OTHER_LDFLAGS = "-stdlib=libc++";
 				PRODUCT_NAME = unwinddump;
-				SDKROOT = macosx.internal;
 			};
 			name = Debug;
 		};
@@ -1905,7 +1916,6 @@
 				);
 				OTHER_LDFLAGS = "-Wl,-exported_symbol,__mh_execute_header";
 				PRODUCT_NAME = unwinddump;
-				SDKROOT = macosx.internal;
 				STRIP_INSTALLED_PRODUCT = YES;
 				STRIP_STYLE = debugging;
 			};
@@ -1940,7 +1950,6 @@
 				);
 				OTHER_LDFLAGS = "-stdlib=libc++";
 				PRODUCT_NAME = dyldinfo;
-				SDKROOT = macosx.internal;
 				WARNING_CFLAGS = "-Wall";
 			};
 			name = Debug;
@@ -1963,7 +1972,6 @@
 				);
 				OTHER_LDFLAGS = "-stdlib=libc++";
 				PRODUCT_NAME = dyldinfo;
-				SDKROOT = macosx.internal;
 				STRIP_INSTALLED_PRODUCT = YES;
 				STRIP_STYLE = debugging;
 				ZERO_LINK = NO;
@@ -1988,7 +1996,6 @@
 				);
 				OTHER_LDFLAGS = "-stdlib=libc++";
 				PRODUCT_NAME = machocheck;
-				SDKROOT = macosx.internal;
 			};
 			name = Debug;
 		};
@@ -2010,7 +2017,6 @@
 				);
 				OTHER_LDFLAGS = "-stdlib=libc++";
 				PRODUCT_NAME = machocheck;
-				SDKROOT = macosx.internal;
 			};
 			name = Release;
 		};
diff -Naur ld64/src/ld/LinkEdit.hpp ld64_patched/src/ld/LinkEdit.hpp
--- ld64/src/ld/LinkEdit.hpp	2020-07-30 07:14:22.000000000 +0800
+++ ld64_patched/src/ld/LinkEdit.hpp	2021-05-06 12:08:38.000000000 +0800
@@ -31,7 +31,7 @@
 #include <limits.h>
 #include <unistd.h>
 #include <CommonCrypto/CommonDigest.h>
-#include <CommonCrypto/CommonDigestSPI.h>
+//#include <CommonCrypto/CommonDigestSPI.h>
 
 #include <vector>
 #include <unordered_map>
diff -Naur ld64/src/ld/Options.cpp ld64_patched/src/ld/Options.cpp
--- ld64/src/ld/Options.cpp	2021-02-25 09:28:28.000000000 +0800
+++ ld64_patched/src/ld/Options.cpp	2021-05-06 12:08:38.000000000 +0800
@@ -64,7 +64,7 @@
 // magic to place command line in crash reports
 const int crashreporterBufferSize = 2000;
 static char crashreporterBuffer[crashreporterBufferSize];
-#if __MAC_OS_X_VERSION_MIN_REQUIRED >= 1070
+#if 0
 	#include <CrashReporterClient.h>
 	// hack until ld does not need to build on 10.6 anymore
     struct crashreporter_annotations_t gCRAnnotations 
@@ -4066,6 +4066,9 @@
 			else if (strcmp(arg, "-adhoc_codesign") == 0) {
 				fAdHocSign = true;
 			}
+			else if (strcmp(arg, "-no_adhoc_codesign") == 0) {
+				fAdHocSign = false;
+			}
 			else if (strcmp(arg, "-oso_prefix") == 0) {
 				const char* path = argv[++i];
 				if ( path == NULL )
@@ -6406,7 +6409,7 @@
 	bool newLinker = false;
 	
 	// build command line buffer in case ld crashes
-#if __MAC_OS_X_VERSION_MIN_REQUIRED >= 1070
+#if 0
 	CRSetCrashLogMessage(crashreporterBuffer);
 #endif
 	const char* srcRoot = getenv("SRCROOT");
